2022년 06월 17일 9주차 WIL





1. DRF 특강


DRF 특강을 통해 장고 심화에 들어가기 전에 아직 장고에 대한 이해가 부족하고
심화과정에 바로 들어가기엔 어렵다는 판단에 특강을 진행하였고
특강을 진행하는 동안 많은 걸 배울 수 있었다.
하지만 여러 문제점들이 발견되었다.

- 문제1 : DRF 특강 중 말씀해주시는 강의내용에 이해를 하지 못하는 부분이 많음.
- 해결방안 : 장고 내용에 개념정리가 선행되어야 함. ex) model field, key

- 문제2 : 과제를 받았을 때 model 구성도가 머릿속에 그려지지 않음.
- 해결방안 : 무엇을 만들고자 하는지, 무엇이 필요한지에 대한 정리가 필요함.

남은시간 빨리 개념정리를 다시 해야한다.
명도를 받았는데 할 줄 아는게 고작 야채밖에 못 써는 현실..
회 뜰 줄은 알아야 하지 않겠는가..
주말동안 노트정리한 부분 다시 차근차근 훑어보고
내가 배운 것들을 키워드로 정리해야겠다.






2. Netflix 프로젝트


[[ 팀원 회고록 ]]

- 안정환 : 내가 이번 프로젝트로 느꼈던 가장큰 문제는 바로 다름 아닌 나에게 있었다. 나는 인풋대비 아웃풋이적은 사람이라 아무리 노력해도 다른사람들 보다 금방 뒤쳐지곤 했지만 실제로 협업을 하기에 나의 실력이 얼마나 부족한지 느낄수 있었고, 정확히 내가 모르는게 무엇인지 이번 프로젝트를 통해서 알 수 있게 되었다. 이번 프로젝트에서 장고에 대한 전반적인 이해 자체가 부족했다 판단하여 프로젝트가 끝난 바로 오늘 부터 바로 프로젝트를 복습하며 개선해나가며 나의 부족한 점을 매꿔나갈 생각이다.

- 김혁진 : 장고가 얼마나 굉장한 프레임워크인지 새삼 깨닫게 되었고 코딩에 대한 기본 개념이 잡힌 것 같아서 좋았다. 프로젝트를 진행하는 동안 팀원들과 업무분담을 통해 각자의 역할에 책임을 다하는 모습이 보기 좋았고 지난 프로젝트 마다 언급되었던 깃허브 사용이 급격히 개선되어서 뿌듯했다. 장고를 사용할 때 잠깐의 해결이라 생각했던 오류들이 나중에 뒤엉키면서 꼬이기 시작했고 그 후 사실 디버깅하는데 많은 어려움이 있었다. 꼼곰한 기획과 체계적인 API와 데이터 설계가 얼마나 중요한지 느꼈다.

- 서정인 : 이번 프로젝트를 진행하면서 장고에대해 이해가 좀 더 잘되게 된 것 같고, 이론면에서 많이 공부가 되고 도움이 된거것같다. 진행하면서 각자 맡은 기능이나 계획이 확실히 잡혀져 있지 않아서 좀 아쉬운 점이 있지만, 그래도 마무리를 마지막에 다 같이 열심히 하려고 해서 만족스러운 것 같다 그리고 내가 좀 더 장고에대해 알게 되고 성장하게되는 프로젝트가 되어서 만족스러운 프로젝트가 된 것 같다.

- 김정후 : 이번 프로젝트 때에는  장고라는 웹프레임워크를 사용하여 서비스를 개발하는 것을 경험하였다. 저번에 받았던 프로젝트 피트백에 깃 활용에 대한 코멘트가 있었는데, 이번에는 팀원 전체가 이부분을 의식하면서 작업하였다. 푸시할 때 에러가 나는 상황이 깃에 대해 공부를 좀 더 깊게 해야겠다는 생각을 들게 하였다. 이번엔 저번에 다짐했던 대로 모르는 부분이 있을 때 최대한 찾아보고, 우리 조 팀원분 다른 조 팀원분 막론하고 물어보러 다녔고, 먼저 스스로 깊게 찾아보고 시도하는 과정에서 어느 부분에 대해서 물어보면 이 문제가 해결되겠다라는 생각이 명확해짐을 느꼈다. 후반부에는 난이도가 급격히 올라갔지만 병합하는 과정에서도 저번보다 훨씬 매끄럽게 진행 되었음에 의의를 둔다. 아쉬운 점이 있다면 db테이블을 정확하게 작성하지 못한 점과, db설계를 매끄럽게 하지 못해서 프로젝트 진행할 때 계속 수정하게 되었던 점이다.


​
[[ K P T ]]

- Keep

Git 사용에 대한 장족의 발전
API Table 마인드맵 활용
노션활용한 일정관리와 프로젝트 요약정리
UI 퍼오기
​​

- Problem

머지를 위한 초반 체계적인 프로젝트 파일링이 안됨.
디버깅시간이 길어지는 것 때문에 프로젝트 일정이 늦어짐.
역할분배에 대한 비율이 적당하지 못하였음.
깃 활용도는 좋았으나 머지가 미흡함.
초반 API Table, DB구성을 구체적으로 잡지 못해서 class가 난무함.
일정관리의 실패
​​

- Try

다음 프로젝트 땐 1 day 1 commit !!!!
API Table, DB 구성을 아주 체계적이고 확실하게.
디버깅에 대한 빠른 대처 방안 필요 ( 1시간 이상 디버깅이 지속될 경우 팀원과 소통 필수 또는 에러 공유 )
필수기능구현에 대한 역할분배의 비율을 나눠보도록
(매우 중요 !!!) 다음 프로젝트부터는 배포도 진행할 수 있도록
기능구현에 관한 일정관리 확실






3. Vscode

파이참에서 벗어나 vscode를 쓰려고 했는데 사용하기 참 어려웠다.
파이참에 적응되어서 폴더 여는 것 조차도 할 줄 모르고
장고프로젝트를 만드는 법도 몰랐다.
빨리 Vscode에 적응되도록 숙련이 필요하다.

- 문제 : VScode에 대한 사용숙련도가 매우 낮음.
- 해결방안 : 터미널 명령어에 대한 정리가 필요.